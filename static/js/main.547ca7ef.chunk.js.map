{"version":3,"sources":["components/SearchBar.js","components/VideoItem.js","components/VideoList.js","components/VideoDetail.js","apis/youtube.js","hooks/useVideos.js","components/app.js","index.js"],"names":["SearchBar","onFormSubmit","useState","term","setTerm","className","onSubmit","event","preventDefault","type","value","onChange","target","VideoItem","video","onVideoSelect","onClick","src","snippet","thumbnails","medium","url","alt","title","VideoList","videos","renderedList","map","key","id","videoId","VideoDetail","videoSrc","description","axios","create","baseURL","useVideos","defaultSearchTerm","setVideos","useEffect","search","a","youtube","get","params","q","part","maxResults","response","data","items","App","selectedVideo","setSelectedVideo","ReactDOM","render","document","querySelector"],"mappings":"iOA8BeA,EA5BG,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,aAAmB,EACdC,mBAAS,IADK,mBAC/BC,EAD+B,KACzBC,EADyB,KAYtC,OACE,yBAAKC,UAAU,yBACb,0BAAMA,UAAU,UAAUC,SAPb,SAAAC,GACfA,EAAMC,iBACNP,EAAaE,KAMT,yBAAKE,UAAU,SACb,qDACA,2BACEI,KAAK,OACLC,MAAOP,EACPQ,SAjBY,SAAAJ,GACpBH,EAAQG,EAAMK,OAAOF,cCaVG,G,MAhBG,SAAC,GAA8B,IAA5BC,EAA2B,EAA3BA,MAAOC,EAAoB,EAApBA,cAC1B,OACE,yBAAKV,UAAU,kBAAkBW,QAAS,kBAAMD,EAAcD,KAC5D,yBACET,UAAU,WACVY,IAAKH,EAAMI,QAAQC,WAAWC,OAAOC,IACrCC,IAAKR,EAAMI,QAAQK,QACrB,yBAAKlB,UAAU,WACb,yBAAKA,UAAU,UACZS,EAAMI,QAAQK,WCDVC,EARG,SAAC,GAA+B,IAA7BC,EAA4B,EAA5BA,OAAQV,EAAoB,EAApBA,cACrBW,EAAeD,EAAOE,KAAI,SAAAb,GAC9B,OAAO,kBAAC,EAAD,CAAWc,IAAKd,EAAMe,GAAGC,QAAShB,MAAOA,EAAOC,cAAeA,OAGxE,OAAO,yBAAKV,UAAU,2BAA2BqB,ICcpCK,EApBK,SAAC,GAAe,IAAbjB,EAAY,EAAZA,MACrB,IAAKA,EACH,OAAO,2CAGT,IAAMkB,EAAQ,wCAAoClB,EAAMe,GAAGC,SAE3D,OACE,6BACE,yBAAKzB,UAAU,YACb,4BAAQY,IAAKe,EAAUT,MAAM,kBAE/B,yBAAKlB,UAAU,cACb,wBAAIA,UAAU,aAAaS,EAAMI,QAAQK,OACzC,2BAAIT,EAAMI,QAAQe,gB,gCCdXC,E,OAAAA,EAAMC,OAAO,CACxBC,QAAS,0CC2BEC,EAzBG,SAACC,GAAuB,IAAD,EACXpC,mBAAS,IADE,mBAChCuB,EADgC,KACxBc,EADwB,KAGvCC,qBAAU,WACRC,EAAOH,KACN,CAACA,IAEJ,IAAMG,EAAM,uCAAG,WAAMtC,GAAN,eAAAuC,EAAA,sEACUC,EAAQC,IAAI,UAAW,CAC5CC,OAAQ,CACNC,EAAG3C,EACH4C,KAAM,UACNtC,KAAM,QACNuC,WAAY,EACZpB,IAhBI,6CASK,OACPqB,EADO,OAWbV,EAAUU,EAASC,KAAKC,OAXX,2CAAH,sDAeZ,MAAO,CAAC1B,EAAQgB,ICOHW,EA5BH,WAAO,IAAD,EAC0BlD,mBAAS,MADnC,mBACTmD,EADS,KACMC,EADN,OAESjB,EAAU,YAFnB,mBAETZ,EAFS,KAEDgB,EAFC,KAQhB,OAJAD,qBAAU,WACRc,EAAiB7B,EAAO,MACvB,CAACA,IAGF,yBAAKpB,UAAU,gBACb,kBAAC,EAAD,CAAWJ,aAAcwC,IACzB,yBAAKpC,UAAU,WACb,yBAAKA,UAAU,UACb,yBAAKA,UAAU,sBACb,kBAAC,EAAD,CAAaS,MAAOuC,KAEtB,yBAAKhD,UAAU,oBACb,kBAAC,EAAD,CACEoB,OAAQA,EACRV,cAAeuC,SCrB7BC,IAASC,OAAO,kBAAC,EAAD,MACdC,SAASC,cAAc,Y","file":"static/js/main.547ca7ef.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\n\r\nconst SearchBar = ({ onFormSubmit }) => {\r\n  const [term, setTerm] = useState('');\r\n\r\n  const onInputChange = event => {\r\n    setTerm(event.target.value);\r\n  };\r\n\r\n  const onSubmit = event => {\r\n    event.preventDefault();\r\n    onFormSubmit(term);\r\n  }\r\n\r\n  return (\r\n    <div className=\"ui segment search-bar\">\r\n      <form className=\"ui form\" onSubmit={onSubmit}>\r\n        <div className=\"field\">\r\n          <label>Search for a Video</label>\r\n          <input\r\n            type=\"text\"\r\n            value={term}\r\n            onChange={onInputChange}\r\n          />\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SearchBar;","import React from 'react';\r\nimport './VideoItem.css';\r\n\r\nconst VideoItem = ({ video, onVideoSelect }) => {\r\n  return (\r\n    <div className=\"item video-item\" onClick={() => onVideoSelect(video)}>\r\n      <img\r\n        className=\"ui image\"\r\n        src={video.snippet.thumbnails.medium.url}\r\n        alt={video.snippet.title} />\r\n      <div className=\"content\">\r\n        <div className=\"header\">\r\n          {video.snippet.title}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default VideoItem;","import React from 'react';\r\nimport VideoItem from './VideoItem';\r\n\r\nconst VideoList = ({ videos, onVideoSelect }) => {\r\n  const renderedList = videos.map(video => {\r\n    return <VideoItem key={video.id.videoId} video={video} onVideoSelect={onVideoSelect} />\r\n  })\r\n\r\n  return <div className='ui relaxed divided list'>{renderedList}</div>\r\n}\r\n\r\nexport default VideoList;","import React from 'react';\r\n\r\nconst VideoDetail = ({ video }) => {\r\n  if (!video) {\r\n    return <div>Loading...</div>;\r\n  }\r\n\r\n  const videoSrc = `https://www.youtube.com/embed/${video.id.videoId}`;\r\n\r\n  return (\r\n    <div>\r\n      <div className='ui embed'>\r\n        <iframe src={videoSrc} title='Video player'/>\r\n      </div>\r\n      <div className='ui segment'>\r\n        <h4 className='ui header'>{video.snippet.title}</h4>\r\n        <p>{video.snippet.description}</p>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default VideoDetail;","import axios from 'axios';\r\n\r\nexport default axios.create({\r\n    baseURL: 'https://www.googleapis.com/youtube/v3'\r\n});\r\n\r\n\r\n\r\n","import { useState, useEffect } from 'react';\r\nimport youtube from '../apis/youtube';\r\n\r\nconst KEY = 'AIzaSyDNwVYR39VhH_Azb706OHj7OhniTSOBQDY';\r\n\r\nconst useVideos = (defaultSearchTerm) => {\r\n  const [videos, setVideos] = useState([]);\r\n\r\n  useEffect(() => {\r\n    search(defaultSearchTerm);\r\n  }, [defaultSearchTerm]);\r\n\r\n  const search = async term => {\r\n    const response = await youtube.get('/search', {\r\n      params: {\r\n        q: term,\r\n        part: 'snippet',\r\n        type: 'video',\r\n        maxResults: 5,\r\n        key: KEY\r\n      }\r\n    });\r\n\r\n    setVideos(response.data.items);\r\n\r\n  };\r\n\r\n  return [videos, search];\r\n}\r\n\r\nexport default useVideos;","import React, { useState, useEffect } from 'react';\r\nimport SearchBar from './SearchBar';\r\nimport VideoList from './VideoList';\r\nimport VideoDetail from './VideoDetail';\r\nimport useVideos from '../hooks/useVideos'\r\n\r\nconst App = () => {\r\n  const [selectedVideo, setSelectedVideo] = useState(null);\r\n  const [videos, search] = useVideos('No Dunks');\r\n\r\n  useEffect(()=>{\r\n    setSelectedVideo(videos[0]);\r\n  }, [videos]);\r\n  \r\n  return (\r\n    <div className=\"ui container\">\r\n      <SearchBar onFormSubmit={search} />\r\n      <div className='ui grid'>\r\n        <div className='ui row'>\r\n          <div className='eleven wide column'>\r\n            <VideoDetail video={selectedVideo} />\r\n          </div>\r\n          <div className='five wide column'>\r\n            <VideoList\r\n              videos={videos}\r\n              onVideoSelect={setSelectedVideo}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './components/app';\r\n\r\nReactDOM.render(<App />,\r\n  document.querySelector('#root')\r\n);"],"sourceRoot":""}